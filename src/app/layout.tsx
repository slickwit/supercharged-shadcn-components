import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import ThemeProvider from "@/components/theme-provider";
import ProgressBarProvider from "@/components/progress-bar";
import { env } from "@/env";
import Script from "next/script";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});
const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: {
		default: env.APP_TITLE,
		template: `%s - ${env.APP_TITLE}`,
	},
	description: "Generated by create next app",
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en" suppressHydrationWarning>
			<body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
				<Script id="color-presets" strategy="beforeInteractive">
					{`(function() {const preset = JSON.parse(localStorage.getItem("settings"))?.state?.themeColorPresets; if (preset){document.documentElement.setAttribute("data-theme", preset);}})();`}
				</Script>
				<ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange enableColorScheme>
					<ProgressBarProvider>{children}</ProgressBarProvider>
				</ThemeProvider>
			</body>
		</html>
	);
}
