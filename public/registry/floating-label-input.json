{
  "name": "floating-label-input",
  "type": "registry:ui",
  "registryDependencies": [
    "label"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst customInputVariant = cva(\r\n\t\"px-3 py-2 flex leading-4 w-full text-foreground rounded-md border dark:border-input/35 border-input/65 ring-offset-background bg-transparent file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-0 focus-visible:border-0 disabled:cursor-not-allowed disabled:opacity-35\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tsize: {\r\n\t\t\t\tsm: \"h-12 text-sm\",\r\n\t\t\t\tmd: \"h-14 text-base py-4\",\r\n\t\t\t\tlg: \"h-16 text-lg\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tsize: \"sm\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ninterface FloatingInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">, VariantProps<typeof customInputVariant> {\r\n\tsize?: \"sm\" | \"md\" | \"lg\" | undefined;\r\n}\r\n\r\nconst CustomInput = React.forwardRef<HTMLInputElement, FloatingInputProps>(({ className, type = \"text\", size, ...props }, ref) => {\r\n\treturn <input type={type} className={cn(customInputVariant({ size, className }))} ref={ref} {...props} />;\r\n});\r\nCustomInput.displayName = \"CustomInput\";\r\n\r\nconst FloatingInput = React.forwardRef<HTMLInputElement, FloatingInputProps>(({ className, ...props }, ref) => {\r\n\treturn <CustomInput placeholder=\" \" className={cn(\"peer bg-transparent border-none\", className)} ref={ref} {...props} />;\r\n});\r\nFloatingInput.displayName = \"FloatingInput\";\r\n\r\nexport { FloatingInput, CustomInput, type FloatingInputProps };\r\n",
      "path": "ui/inputs/base/floating-input.tsx",
      "target": "components/ui/inputs/base/floating-input.tsx"
    },
    {
      "type": "registry:ui",
      "content": "import * as React from \"react\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst floatingLabelVariant = cva(\r\n\t\"cursor-text text-muted-foreground absolute z-10 duration-300 peer-placeholder-shown:start-3 font-medium leading-4 text-xs peer-focus:text-xs start-3 peer-focus:start-3 -top-2 peer-focus:-top-2\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tsize: {\r\n\t\t\t\tsm: \"peer-placeholder-shown:text-sm peer-placeholder-shown:top-3.5\",\r\n\t\t\t\tmd: \"peer-placeholder-shown:text-base peer-placeholder-shown:top-3.5\",\r\n\t\t\t\tlg: \"peer-placeholder-shown:text-lg peer-placeholder-shown:top-4\",\r\n\t\t\t\ttextarea: \"peer-placeholder-shown:text-base peer-placeholder-shown:top-3.5\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tsize: \"sm\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ninterface FloatingLabelProps extends React.ComponentPropsWithoutRef<typeof Label>, VariantProps<typeof floatingLabelVariant> {}\r\n\r\nconst FloatingLabel = React.forwardRef<React.ElementRef<typeof Label>, FloatingLabelProps>(({ size = \"sm\", className, ...props }, ref) => {\r\n\treturn (\r\n\t\t<Label\r\n\t\t\tclassName={cn(\"select-none pointer-events-none transition-all\", floatingLabelVariant({ size, className }))}\r\n\t\t\tref={ref}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n});\r\nFloatingLabel.displayName = \"FloatingLabel\";\r\n\r\nexport { FloatingLabel, floatingLabelVariant, type FloatingLabelProps };\r\n",
      "path": "ui/inputs/base/floating-label.tsx",
      "target": "components/ui/inputs/base/floating-label.tsx"
    },
    {
      "type": "registry:ui",
      "content": "import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { type FloatingInputProps, FloatingInput } from \"./base/floating-input\";\r\nimport { FloatingLabel } from \"./base/floating-label\";\r\n\r\ntype FloatingLabelInputProps = FloatingInputProps & {\r\n\tcontainerProps?: React.HTMLAttributes<HTMLDivElement>;\r\n\tlabel?: string;\r\n\terror?: boolean;\r\n};\r\n\r\nconst FloatingLabelInput = React.forwardRef<React.ElementRef<typeof FloatingInput>, React.PropsWithoutRef<FloatingLabelInputProps>>(\r\n\t({ id, label, error = false, className, containerProps, ...props }, ref) => {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\t{...containerProps}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"relative\",\r\n\t\t\t\t\terror && \"[&>*]:text-error [&>fieldset]:border-error [&>fieldset]:dark:border-error\",\r\n\t\t\t\t\tcontainerProps?.className,\r\n\t\t\t\t)}>\r\n\t\t\t\t<FloatingInput\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tclassName={cn(className, \"focus-visible:ring-ring focus-visible:ring-0 focus-visible:ring-opacity-0\", {\r\n\t\t\t\t\t\t\"text-error\": error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t\t<FloatingLabel\r\n\t\t\t\t\thtmlFor={id}\r\n\t\t\t\t\tsize={props.size}\r\n\t\t\t\t\tclassName={cn(\"peer-focus:text-primary font-medium\", {\r\n\t\t\t\t\t\t\"text-error peer-focus:text-error\": error,\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</FloatingLabel>\r\n\t\t\t\t<fieldset\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t\"absolute peer-focus-visible:border-2 transition-all peer-focus-visible:border-primary inset-0 -top-[5px] border dark:border-input/35 border-input rounded-md m-0 py-0 text-left px-2 pointer-events-none min-w-0 peer-focus:[&>legend]:max-w-full peer-focus-visible:[&>legend]:max-w-full peer-placeholder-shown:[&>legend]:max-w-0\",\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t<legend className=\"transition-all invisible whitespace-nowrap overflow-hidden w-auto max-w-full h-3 leading-4 text-xs font-normal p-0\">\r\n\t\t\t\t\t\t<span className=\"px-1 visible inline-block opacity-0\">{label}</span>\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</div>\r\n\t\t);\r\n\t},\r\n);\r\nFloatingLabelInput.displayName = \"FloatingLabelInput\";\r\n\r\nexport { FloatingLabelInput };\r\n",
      "path": "ui/inputs/floating-label-input.tsx",
      "target": "components/ui/inputs/floating-label-input.tsx"
    }
  ]
}